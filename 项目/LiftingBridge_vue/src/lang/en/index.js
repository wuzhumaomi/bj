
export default {
  route: {
    baggageSecurityTimeStatistics: 'BaggageSecurityTimeStatistics',
    baggageSecurityNumberStatistics: 'BaggageSecurityNumberStatistics',
    baggageSecurityAnalysisChart: 'BaggageSecurityAnalysisChart'
  },
  navbar: {
    logOut: 'logOut',
    SalesDepart:'SalesDepart',
    github: 'github',
    screenfull: 'screenfull',
    theme: 'theme',
    size: 'size',
    treated: 'treated'
  },
  common: {
    systemTitle: 'LiftingBridgeAdmin',
    cancel: 'cancel',
    confirm: 'confirm',
    create: 'create',
    append: 'append',
    update: 'update',
    delete: 'delete',
    edit: 'edit',
    save: 'save',
    search: 'search',
    actions: 'actions',
    export: 'export',
    back: 'back',
    required: 'required',
    success: 'success',
    failure: 'failure',
    prompt: 'prompt',
    error: 'error',
    info: 'info',
    warn: 'warn',
    all: 'all',
    total: 'total',
    remark: 'remark',
    status: 'status',
    isEnabled: 'isEnabled',
    creator: 'creator',
    createTime: 'createTime',
    updater: 'updater',
    updateTime: 'updateTime',
    message: {
      info_channel_location: 'info_channel_location',
      info_create_picture: 'info_create_picture',
      info_select_data: 'info_select_data',
      info_select_group: 'info_select_group',
      info_operation_success: 'info_operation_success',
      info_create_success: 'info_create_success',
      info_update_success: 'info_update_success',
      info_delete_success: 'info_delete_success',
      confirm_delete: 'confirm_delete',
      info_delete_canceled: 'info_delete_canceled',
      confirm_input: 'confirm_input',
      info_input_canceled: 'info_input_canceled',
      info_create_groupNo: 'info_create_groupNo',
      info_input_groupNo: 'info_input_groupNo',
      info_create_groupName: 'info_create_groupName',
      info_input_groupName: 'info_input_groupName',
      info_change_position: 'info_change_position?',
      info_change_tips: 'info_change_tips',
      info_input_passNo: 'info_input_passNo',
      info_input_userId: 'info_input_userId',
      info_card_update: 'info_card_update',
      info_card_cancelLabel: 'info_card_cancelLabel',
      info_create_roleNo: 'info_create_roleNo',
      info_input_roleNo: 'info_input_roleNo',
      info_create_roleName: 'info_create_roleName',
      info_input_roleName: 'info_input_roleName',
      info_select_all: 'info_select_all',
      confirm_create: 'confirm_create',
      confirm_update: 'confirm_update'
    }
    },
    user: {
      loginName: 'loginName',
      fullname: 'fullname',
      realName: 'realName',
      relationPerson: 'relationPerson',
      password: 'password',
      yes: 'yes',
      no: 'no'
    },
    role: {
      role: 'role',
      code: 'code',
      text: 'text',
      param: 'param',
      childItem: 'childItem',
      createChild: 'createChild',
      newRole: 'newRole',
      editRole: 'editRole',
      userRoles: 'userRoles',
      permissions: 'permissions'
    },
    dialogTitle: {
      personSelecter: 'personSelecter',
      selectUser: 'selectUser'
    },
  login: {
    title: 'title',
    logIn: 'logIn',
    username: 'username',
    password: 'password',
    any: 'any',
    thirdparty: 'thirdparty',
    thirdpartyTips: 'thirdpartyTips'
  },
  tagsView: {
    refresh: 'refresh',
    close: 'close',
    closeOthers: 'closeOthers',
    closeAll: 'closeAll'
  },
  operation: {
    newlyAdded: 'newlyAdded',
    query: 'query',
    delete: 'delete',
    edit: 'edit',
    cancellation: 'cancellation',
    reportLoss: 'reportLoss',
    reissue: 'reissue',
    cancel: 'cancel',
    save: 'save',
    submit: 'submit',
    details: 'details',
    viewlivedata: 'viewlivedata'
  },
  channel: {
    channelLocation: 'channelLocation',
    channelType: 'channelType',
    channelNumber: 'channelNumber',
    chargePerson: 'chargePerson',
    remark: 'remark',
    operation: 'operation',
    newChannel: 'newChannel',
    channelstatus: 'channelstatus',
    passengersNumberomnhor: 'passengersNumberomnhor'
  },
  locationTag: {
    cardNumber: 'cardNumber',
    issuingDate: 'issuingDate',
    cardHolder: 'cardHolder',
    tagType: 'tagType',
    state: 'state',
    startTime: 'startTime',
    endTime: 'endTime',
    isEnabled: 'isEnabled',
    sendingCards: 'sendingCards',
    selectionDate: 'selectionDate'
  },
  class: {
    code: 'code',
    text: 'text',
    param: 'param',
    childItem: 'childItem',
    createChild: 'createChild'
  },
  module: {
    code: 'code',
    text: 'text',
    url: 'URL',
    childItem: 'childItem',
    createChild: 'createChild'
  },
  personInfo: {
    channelLocation: 'channelLocation',
    position: 'position',
    name: 'name',
    sex: 'sex',
    birthDate: 'birthDate',
    education: 'education',
    picture: 'picture',
      personnelNumber: 'personnelNumber',
      address: 'address',
      marital: 'marital',
      nation: 'nation',
      nationaloty: 'nationaloty',
      contactNumber: 'contactNumber',
      email: 'email',
      entryDate: 'entryDate',
      graduateSchool: 'graduateSchool',
      choose: 'choose',
      uploadPicture: 'uploadPicture',
      editPerson: 'editPerson',
      lookPerson: 'lookPerson',
      newEmployees: 'newEmployees',
      politicalOutlook: 'politicalOutlook',
      man: 'man',
      woman: 'woman',
      graduateStudent: 'graduateStudent',
      undergraduate: 'undergraduate',
      belowUndergraduateLevel: 'belowUndergraduateLevel',
      state0:'state0',
      state1:'state1',
      isEnabled0:'isEnabled0',
      isEnabled1:'isEnabled1',
      isPublish0:'isPublish0',
      isPublish1:'isPublish1',
    },
  knowledgeManage:{
    personnelNumber: 'personnelNumber',
    channelLocation: 'channelLocation',
    versionNumber:'versionNumber',
    exhibitsExplain:'exhibitsExplain',
    views:'views',
    state:'state',
    validity:'validity',
    releasable:'releasable',
    keyword:'keyword',
    creator:'creator',
    modifier:'modifier',
    creationTime:'creationTime',
    modifyTime:'modifyTime',
  },
  bug: {
    projectName: 'projectName',
    level: 'level',
    bugTitle: 'bugTitle',
    creator: 'creator',
    Assignor: 'Assignor',
    Solver: 'Solver',
    subordinateProject: 'subordinateProject',
    subordinateModule: 'subordinateModule',
    assignedTo: 'assignedTo',
    closingDate: 'closingDate',
    bugType: 'bugType',
    operatingSystem: 'operatingSystem',
    relatedDemand: 'relatedDemand',
    relatedTasks: 'relatedTasks',
    taskName: 'taskName',
    severity: 'severity',
    reproSteps: 'reproSteps',
    bugState: 'bugState',
    activationTimes: 'activationTimes',
    currentAssignment: 'currentAssignment',
    browser: 'browser'
  },
  placeholders:{
    pureDigital: 'pureDigital',
    content: 'content',
    pleaseEnterCreator: 'pleaseEnterCreator',
    pleaseEnterModifier: 'pleaseEnterModifier'
  },
  BasicData:{
    projectName:'projectName',
    projectCode:'projectCode',
    startTime:'startTime',
    endTime:'endTime',
    moduleName:'moduleName',
    abbreViation:'abbreViation',
    projectDescription:'projectDescription',
    addModule:'addModule',
    operation:'operation',
    subordinateProjects:'subordinateProjects',
    subordinateModule:'subordinateModule',
    caseTypes:'caseTypes',
    relevantNeeds:'relevantNeeds',
    caseName:'caseName',
    priority:'priority',
    precondition:'precondition',
    caseSteps:'caseSteps',
    step:'step',
    expect:'expect',
    projectStatistics:'projectStatistics',
    addItem:'addItem',
    task:'task',
    solvebug:'solvebug',
    estimate:'estimate',
    consume:'consume',
    surplus:'surplus',
    ongoingProjects:'ongoingProjects',
    closingDate:'closingDate',
    progresSpeed:'progresSpeed',
    tasksaAssignedToMe:'tasksaAssignedToMe',
    taskID:'taskID',
    name:'name',
    state:'state',
    selectionProjects:'selectionProjects',
    documentLibraryName:'documentLibraryName',
    documentsNumber:'documentsNumber',
    editingProjects:'editingProjects',
    delay:'delay',
    close:'close',
    activation:'activation',
    news:'news',
    rightsManagement:'rightsManagement',
    teamManagement:'teamManagement',
    member:'member',
    assignmentTasks:'assignmentTasks',
    completed:'completed',
    bugShutdown:'bugShutdown',
    documentLibrary:'documentLibrary',
    createDocumentLibrary:'createDocumentLibrary',
    meetingMinutes:'meetingMinutes',
    experiencedLesson:'experiencedLesson',
    essentialInformation:'essentialInformation',
    projectStatus:'projectStatus',
    hourStatistics:'hourStatistics',
    projectProgress:'projectProgress',
    theoryHours:'theoryHours',
    actualHours:'actualHours',
    demand:'demand',
    task:'task',
    bug:'BUG',
    addingRequirements:'addingRequirements',
    requirementName:'requirementName',
    founder:'founder',
    stage:'stage',
    testCase:'testCase',
    confirmDemand:'confirmDemand',
    closingRequirements:'closingRequirements',
    aecompositionTasks:'aecompositionTasks',
    addingTestcases:'addingTestcases',
    subordinateProjects:'subordinateProjects',
    subordinateModule:'subordinateModule',
    sourceAffiliation:'sourceAffiliation',
    additionalInformation:'additionalInformation',
    estimatedNumber: 'estimatedNumber',
    requirementDescription: 'requirementDescription',
    personnel:'personnel',
    teamRoles:'teamRoles',
    availableWorkingDays:'availableWorkingDays'
  }
}
